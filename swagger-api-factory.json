{
  "openapi": "3.0.1",
  "info": {
    "title": "API Factory",
    "description": "API Factory",
    "termsOfService": "http://datahub.mksmart.org",
    "contact": {
      "email": "datahub-support@mksmart.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "query",
      "description": "Query documents",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "object",
      "description": "Push, update and delete documents"
    }
  ],
  "paths": {
    "/query/{dataset-uuid}": {
      "post": {
        "tags": [
          "query"
        ],
        "summary": "Query a dataset",
        "description": "Pass a MongoDB query in the body of this request to query the dataset, or pass an empty body to return all documents",
        "operationId": "query",
        "parameters": [
          {
            "name": "dataset-uuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Optionally limit the numer of documents returned",
            "schema": {
              "minimum": 0,
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "The filter query",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "sensorID": "42-a"
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "_id": "1067",
                    "sensorID": "42-a",
                    "sensorValue": 34.7
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, dataset uuid not specified",
            "content": {}
          },
          "401": {
            "description": "Unauthorized. Dataset key must be provided as HTTP Basic Auth username",
            "content": {}
          },
          "404": {
            "description": "Object not found",
            "content": {}
          },
          "405": {
            "description": "Method not allowed",
            "content": {}
          }
        }
      }
    },
    "/object/{dataset-uuid}": {
      "put": {
        "tags": [
          "object"
        ],
        "summary": "Create a new document in the dataset",
        "operationId": "createDocument",
        "parameters": [
          {
            "name": "dataset-uuid",
            "in": "path",
            "description": "dataset uuid identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The document to be created",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "_id": "1067",
                  "sensorID": "42-a",
                  "sesnorValue": 34.7
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Invalid Order",
            "content": {}
          }
        }
      }
    },
    "/object/{dataset-uuid}/{id_type}/{doc_id}": {
      "post": {
        "tags": [
          "object"
        ],
        "summary": "Update a document by ID",
        "description": "Update an existing document, referenced by ID. Note that the existing document will be overwritten, so a full document should be supplied.",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "dataset-uuid",
            "in": "path",
            "description": "The UUID of the dataset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id_type",
            "in": "path",
            "description": "Specifiy whether this docuemnt is referenced via a user supplied ID or a MongoDB-generated OID",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "oid"
              ]
            }
          },
          {
            "name": "doc_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Order not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "object"
        ],
        "summary": "Delete a document by ID",
        "description": "Delete an existing document, referenced by ID.",
        "operationId": "deleteDocument",
        "parameters": [
          {
            "name": "dataset-uuid",
            "in": "path",
            "description": "The UUID of the dataset",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id_type",
            "in": "path",
            "description": "Specifiy whether this docuemnt is referenced via a user supplied ID or a MongoDB-generated OID",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "oid"
              ]
            }
          },
          {
            "name": "doc_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Order not found",
            "content": {}
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about the API Factory",
    "url": "http://datahu.mksmart.org"
  },
  "servers": [
    {
      "url": "https://api.mksmart.org/data/"
    }
  ],
  "security": [
    {
      "DatasetAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "DatasetAuth": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}