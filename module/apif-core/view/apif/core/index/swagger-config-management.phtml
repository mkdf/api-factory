{
"openapi": "3.0.1",
"info": {
"title": "API Factory - Management API",
"description": "Management API",
"termsOfService": "http://datahub.mksmart.org",
"contact": {
"email": "datahub-support@mksmart.org"
},
"license": {
"name": "Apache 2.0",
"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
},
"version": "0.7.0"
},
"tags": [
{
"name": "datasets",
"description": "Manage datasets",
"externalDocs": {
"description": "Find out more",
"url": "http://datahub.mksmart.org"
}
},
{
"name": "permissions",
"description": "Manage permissions"
},
{
"name": "schemas",
"description": "Manage schemas"
}
],
"paths": {
"/datasets": {
"get": {
"tags": [
"datasets"
],
"summary": "Retrieve all datasets",
"description": "Retrieves a full list of dataset UUIDs",
"operationId": "getAllDatasets",
"responses": {
"200": {
"description": "Success"
}
}
},
"post": {
"tags": [
"datasets"
],
"summary": "Create a new dataset",
"description": "Create a new dataset",
"operationId": "createDataset",
"requestBody": {
"required": true,
"content": {
"application/x-www-form-urlencoded": {
"schema": {
"type": "object",
"properties": {
"dataset-uuid": {
"type": "string"
},
"key": {
"type": "integer"
}
},
"required": [
"dataset-uuid",
"key"
]
}
}
}
},
"responses": {
"201": {
"description": "Created"
}
}
}
},
"/datasets/{dataset-uuid}": {
"get": {
"tags": [
"datasets"
],
"summary": "Retrieve single dataset details",
"description": "Retrieves a single dataset summary, including the number of documents in that dataset",
"operationId": "getOneDataset",
"parameters": [
{
"name": "dataset-uuid",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "Success"
}
}
}
},
"/permissions": {
"get": {
"tags": [
"permissions"
],
"summary": "Get all permissions",
"description": "Get all permissions",
"operationId": "getAllPermissions",
"responses": {
"200": {
"description": "successful operation"
}
}
}
},
"/permissions/{key}": {
"get": {
"tags": [
"permissions"
],
"summary": "Get permissions for single key",
"description": "Get permissions for a given API key",
"operationId": "getPermissionsByKey",
"parameters": [
{
"name": "key",
"in": "path",
"description": "The API key that you require a permissions summary for",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "successful operation"
}
}
},
"post": {
"tags": [
"permissions"
],
"summary": "Set/update permissions",
"description": "Set or update the permissions on a dataset for a given key",
"operationId": "setPermissions",
"requestBody": {
"required": true,
"content": {
"application/x-www-form-urlencoded": {
"schema": {
"type": "object",
"properties": {
"dataset-uuid": {
"type": "string"
},
"read": {
"type": "integer",
"description": "Set read access",
"enum": [
0,
1
]
},
"write": {
"type": "integer",
"description": "Set write access",
"enum": [
0,
1
]
}
},
"required": [
"dataset-uuid",
"read",
"write"
]
}
}
}
},
"parameters": [
{
"name": "key",
"in": "path",
"description": "Key",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "OK"
}
}
}
},
"/schemas": {
"get": {
"tags": [
"schemas"
],
"summary": "Retrieve all schemas",
"description": "Retrieves a full list of schemas",
"operationId": "getAllSchemas",
"responses": {
"200": {
"description": "Success"
}
}
},
"post": {
"tags": [
"schemas"
],
"summary": "Create a new schema",
"description": "Create a new schema",
"operationId": "createSchema",
"requestBody": {
"required": true,
"content": {
"application/x-www-form-urlencoded": {
"schema": {
"type": "object",
"properties": {
"schema-id": {
"type": "string"
},
"schema": {
"type": "string"
},
"external": {
"type": "integer",
"description": "Is this an external schema?",
"enum": [
0,
1
]
}
},
"required": [
"schema-id",
"schema",
"external"
]
}
}
}
},
"responses": {
"201": {
"description": "Created"
}
}
}
},
"/schemas/{schema-id}": {
"get": {
"tags": [
"schemas"
],
"summary": "Retrieve full details for a single schema",
"description": "Retrieves full details for a single schema, including metadata",
"operationId": "getOneSchema",
"parameters": [
{
"name": "schema-id",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"responses": {
"200": {
"description": "Success"
}
}
},
"put": {
"tags": [
"schemas"
],
"summary": "Update an existing schema",
"description": "Update an existing schema. Schema will be created if it does not already exist",
"operationId": "updateSchema",
"parameters": [
{
"name": "schema-id",
"in": "path",
"required": true,
"schema": {
"type": "string"
}
}
],
"requestBody": {
"required": true,
"content": {
"application/x-www-form-urlencoded": {
"schema": {
"type": "object",
"properties": {
"schema-id": {
"type": "string"
},
"schema": {
"type": "string"
}
},
"required": [
"schema-id",
"schema"
]
}
}
}
},
"responses": {
"201": {
"description": "Created"
},
"204": {
"description": "Updated"
}
}
}
}
},
"externalDocs": {
"description": "Find out more about the API Factory",
"url": "http://datahub.mksmart.org"
},
"servers": [
{
"url": "/management"
}
],
"security": [
{
"DatasetAuth": []
}
],
"components": {
"securitySchemes": {
"DatasetAuth": {
"type": "http",
"scheme": "basic"
}
}
}
}